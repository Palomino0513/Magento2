#!/usr/bin/python
import sys
import os

if sys.argv[0] != "./chikatana":
    print("Comando no valido.")
    exit(0)

def printHelp():
    print("Chikatana Command Line:")

if len(sys.argv) == 1:
    printHelp()
    exit(0)

if sys.argv[1] == "init":
    os.system("docker-compose up -d")
    exit(0)

if sys.argv[1] == "up":
    os.system("docker-compose up -d")
    exit(0)

if sys.argv[1] == "down":
    os.system("docker-compose down")
    exit(0)

if sys.argv[1] == "restart":
    os.system("docker-compose down && docker-compose up -d")
    exit(0)



###################################################################################
#                                                                                 #
#                                 DOCKER COMMANDS                                 #
#                                                                                 #
###################################################################################

if sys.argv[1] == "docker":
    if len(sys.argv) == 3:
        if sys.argv[2] == "ps":
            os.system("docker-compose ps")
            exit(0)

        # Mensaje para indicar que el comando no fue encontrado
        print("El comando docker no encontrado")
    elif len(sys.argv) > 3:
        if sys.argv[2] == "magento":
            if sys.argv[3] == "build":
                os.system("cd DockerFile && docker build --rm --no-cache -t rafaelcgstz/magento2 .")
                exit(0)

        # Mensaje para indicar que el comando no fue encontrado
        print("El comando docker no encontrado")
    else:
        # Mensaje para indicar que el comando no se puede ejecutar
        print("El comando docker esta incompleto")
    exit(0)




###################################################################################
#                                                                                 #
#                                 MAGENTO COMMANDS                                #
#                                                                                 #
###################################################################################

if sys.argv[1] == "magento":
    if len(sys.argv) == 2:
        os.system("docker exec -it bizarro_apache_1 bash")
        exit(0)
    elif len(sys.argv) >= 3:
        if sys.argv[2] == "composer":
            os.system("docker exec -it bizarro_apache_1 composer install")
            exit(0)
        elif sys.argv[2] == "upgrade":
            os.system("docker exec -it bizarro_apache_1 php bin/magento setup:upgrade")
            exit(0)
        elif sys.argv[2] == "cache":
            print("Borrando Cahe ...")    
            os.system("docker exec -it bizarro_apache_1 php bin/magento cache:clean")
            print("Cambiando permisos ...")
            os.system("docker exec -it bizarro_apache_1 chown -R www-data:www-data generated pub var")
            print("Hecho.")
            exit(0)
        elif sys.argv[2] == "template-hints":
            if sys.argv[3] == "enable":
                os.system("docker exec -it bizarro_apache_1 php bin/magento dev:template-hints:enable")
                exit(0)
            else:
                os.system("docker exec -it bizarro_apache_1 php bin/magento dev:template-hints:disable")
                exit(0)


        # Mensaje para indicar que el comando no fue encontrado
        print("El comando docker no encontrado")
    elif len(sys.argv) > 3:
        # if sys.argv[2] == "build":

        # Mensaje para indicar que el comando no fue encontrado
        print("El comando docker no encontrado")
    else:
        # Mensaje para indicar que el comando no se puede ejecutar
        print("El comando de magento esta incompleto")
    exit(0)